"""Added initial tables

Revision ID: 7bea40c4a323
Revises: 
Create Date: 2023-09-29 12:08:25.373573

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '7bea40c4a323'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum('pending', 'signed', 'archived', name='contractstatus').create(op.get_bind())
    sa.Enum('commercial', 'support', 'gestion', name='roleemployees').create(op.get_bind())
    op.create_table('employee',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=70), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('role', postgresql.ENUM('commercial', 'support', 'gestion', name='roleemployees', create_type=False), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('client',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('firstname', sa.String(length=70), nullable=True),
    sa.Column('lastname', sa.String(length=70), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('tel', sa.Integer(), nullable=True),
    sa.Column('society_name', sa.String(), nullable=True),
    sa.Column('created_date', sa.DateTime(), nullable=False),
    sa.Column('updated_date', sa.DateTime(), nullable=False),
    sa.Column('commercial_employee_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['commercial_employee_id'], ['employee.id'], ondelete='restrict'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('contract',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('total_amount', sa.Integer(), nullable=True),
    sa.Column('amount_to_pay', sa.Integer(), nullable=True),
    sa.Column('created_date', sa.DateTime(), nullable=False),
    sa.Column('status', postgresql.ENUM('pending', 'signed', 'archived', name='contractstatus', create_type=False), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], ondelete='restrict'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('event',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('contrat_id', sa.Integer(), nullable=False),
    sa.Column('datetime_start', sa.DateTime(), nullable=True),
    sa.Column('datetime_end', sa.DateTime(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('support_employee_id', sa.Integer(), nullable=True),
    sa.Column('attendees', sa.Integer(), nullable=True),
    sa.Column('notes', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['contrat_id'], ['contract.id'], ondelete='restrict'),
    sa.ForeignKeyConstraint(['support_employee_id'], ['employee.id'], ondelete='restrict'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('event')
    op.drop_table('contract')
    op.drop_table('client')
    op.drop_table('employee')
    sa.Enum('commercial', 'support', 'gestion', name='roleemployees').drop(op.get_bind())
    sa.Enum('pending', 'signed', 'archived', name='contractstatus').drop(op.get_bind())
    # ### end Alembic commands ###
